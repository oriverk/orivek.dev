---
import { getCollection } from "astro:content";
import ActivityCalendar from "@/components/ActivityCalendar/index.svelte";
import FeedCard from "@/components/FeedCard.svelte";
import Hero from "@/components/Hero.svelte";
import RepositoryCard from "@/components/RepositoryCard.svelte";
import ContentWrapper from "@/components/ui/ContentWrapper.svelte";
import Layout from "@/layouts/Layout.astro";
import { getContributionCallendar } from "@/utils/github/getUserContent";

const displayItemsCount = 12;
const contributionCalendar = getContributionCallendar();
const repositoryCollection = await getCollection(
  "repository",
  ({ data }) => !data.isFork,
);
const feedCollection = await getCollection("feed");
const blogCollection = await getCollection("blog", ({ data }) => {
  return import.meta.env.PROD ? data.published : true;
});

const posts = blogCollection.map(({ id, data }) => {
  const { title, create, update } = data;
  const isoDate = update ?? create;
  const dateMiliSeconds = new Date(isoDate).getTime();
  return {
    title,
    // contentSnippet: tags,
    link: `/blog/${id}`,
    isoDate: isoDate.toString(),
    dateMiliSeconds,
  };
});

const feeds = feedCollection
  .map(({ data }) => {
    const { id, ...rest } = data;
    return rest;
  })
  .concat(posts)
  .sort((a, b) => b.dateMiliSeconds - a.dateMiliSeconds)
  .slice(0, displayItemsCount);
const colors = ["#161b22", "#0e4429", "#006d32", "#26a641", "#39d353"];
---

<Layout title="Home">
  <section>
    <ContentWrapper>
      <div class="hero">
        <Hero />
      </div>
    </ContentWrapper>
  </section>
  <section>
    <ContentWrapper>
      <div class="github">
        <h2>GitHub</h2>
        <div class="github-repository">
          <h3>Repository</h3>
          <ol class="grid">
            {
              repositoryCollection.map(({ data }) => (
                <RepositoryCard {...data} />
              ))
            }
          </ol>
        </div>
        <div class="github-contributions">
          <h3>Contributions</h3>
          <p>update once a week</p>
          <ActivityCalendar
            blockMargin={3}
            blockRadius={2}
            blockSize={12}
            fontSize={14}
            colors={colors}
            contributionCalendar={contributionCalendar}
          />
        </div>
      </div>
    </ContentWrapper>
  </section>
  <section>
    <ContentWrapper>
      <div class="feed">
        <h2>Feed</h2>
        <ol class="grid">
          {feeds.map((item) => <FeedCard {...item} />)}
        </ol>
      </div>
    </ContentWrapper>
  </section>
</Layout>

<style>
  .hero,
  .github,
  .feed {
    padding: 2rem 0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .hero {
    min-height: calc(100vh - var(--header-height));
  }

  h3 {
    text-align: left;
  }

  .github-repository,
  .github-contributions {
    width: 100%;
  }

  .github-repository {
    margin-bottom: 2rem;
  }

  .grid {
    margin: 0;
    padding: 0;
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(1, 1fr);
    list-style: none;
  }

  @media (640px <= width) {
    .grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>
